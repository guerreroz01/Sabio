{
  "output_path": "/home/erogol/Models/LJSpeech/",
  "logger_uri": null,
  "run_name": "mai-es-ddc",
  "project_name": null,
  "run_description": "tacotron2 with DDC and differential spectral loss with M-AI labs ES dataset (angelina)",
  "print_step": 25,
  "plot_step": 100,
  "model_param_stats": false,
  "wandb_entity": null,
  "dashboard_logger": "tensorboard",
  "save_on_interrupt": true,
  "log_model_step": null,
  "save_step": 10000,
  "save_n_checkpoints": 5,
  "save_checkpoints": true,
  "save_all_best": false,
  "save_best_after": 10000,
  "target_loss": null,
  "print_eval": false,
  "test_delay_epochs": 10,
  "run_eval": true,
  "run_eval_steps": null,
  "distributed_backend": "nccl",
  "distributed_url": "tcp://localhost:54321",
  "mixed_precision": false,
  "epochs": 2000,
  "batch_size": 32,
  "eval_batch_size": 16,
  "grad_clip": 1.0,
  "scheduler_after_epoch": true,
  "lr": 0.0001,
  "optimizer": "RAdam",
  "optimizer_params": { "betas": [0.9, 0.998], "weight_decay": 1e-6 },
  "lr_scheduler": "NoamLR",
  "lr_scheduler_params": { "warmup_steps": 4000 },
  "use_grad_scaler": false,
  "cudnn_enable": true,
  "cudnn_deterministic": false,
  "cudnn_benchmark": true,
  "training_seed": 54321,
  "model": "Tacotron2",
  "num_loader_workers": 4,
  "num_eval_loader_workers": 0,
  "use_noise_augment": false,
  "audio": {
    "fft_size": 1024,
    "win_length": 1024,
    "hop_length": 256,
    "frame_shift_ms": null,
    "frame_length_ms": null,
    "stft_pad_mode": "reflect",
    "sample_rate": 16000,
    "resample": false,
    "preemphasis": 0.0,
    "ref_level_db": 20,
    "do_sound_norm": false,
    "log_func": "np.log10",
    "do_trim_silence": true,
    "trim_db": 60,
    "do_rms_norm": false,
    "db_level": null,
    "power": 1.5,
    "griffin_lim_iters": 60,
    "num_mels": 80,
    "mel_fmin": 50.0,
    "mel_fmax": 7600.0,
    "spec_gain": 1,
    "do_amp_to_db_linear": true,
    "do_amp_to_db_mel": true,
    "pitch_fmax": 640.0,
    "pitch_fmin": 0.0,
    "signal_norm": true,
    "min_level_db": -100,
    "symmetric_norm": true,
    "max_norm": 4.0,
    "clip_norm": true,
    "stats_path": "/home/kali/.local/share/tts/tts_models--es--mai--tacotron2-DDC/scale_stats.npy"
  },
  "use_phonemes": true,
  "phonemizer": "gruut",
  "phoneme_language": "es",
  "compute_input_seq_cache": false,
  "text_cleaner": "phoneme_cleaners",
  "enable_eos_bos_chars": false,
  "test_sentences_file": null,
  "phoneme_cache_path": "/home/erogol/Models/phoneme_cache/",
  "characters": {
    "characters_class": null,
    "vocab_dict": null,
    "pad": "_",
    "eos": "~",
    "bos": "^",
    "blank": null,
    "characters": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!'(),-.:;? ",
    "punctuations": "!'(),-.:;? ",
    "phonemes": "abcdefhijklmnopqrstuvwxyz\u00e6\u00e7\u00f0\u00f8\u0127\u014b\u0153\u01c0\u01c1\u01c2\u01c3\u0250\u0251\u0252\u0253\u0254\u0255\u0256\u0257\u0258\u0259\u025a\u025b\u025c\u025e\u025f\u0260\u0261\u0262\u0263\u0264\u0265\u0266\u0267\u0268\u026a\u026b\u026c\u026d\u026e\u026f\u0270\u0271\u0272\u0273\u0274\u0275\u0276\u0278\u0279\u027a\u027b\u027d\u027e\u0280\u0281\u0282\u0283\u0284\u0288\u0289\u028a\u028b\u028c\u028d\u028e\u028f\u0290\u0291\u0292\u0294\u0295\u0298\u0299\u029b\u029c\u029d\u029f\u02a1\u02a2\u02c8\u02cc\u02d0\u02d1\u02de\u03b2\u03b8\u03c7\u1d7b\u2c71",
    "is_unique": true,
    "is_sorted": true
  },
  "add_blank": false,
  "batch_group_size": 4,
  "loss_masking": true,
  "sort_by_audio_len": false,
  "min_audio_len": 1,
  "max_audio_len": Infinity,
  "min_text_len": 1,
  "max_text_len": Infinity,
  "compute_f0": false,
  "compute_linear_spec": false,
  "precompute_num_workers": 0,
  "start_by_longest": false,
  "datasets": [
    {
      "name": "ljspeech",
      "path": "/home/erogol/Data/es_ES/by_book/female/karen_savage/angelina/",
      "meta_file_train": "metadata.csv",
      "ignored_speakers": null,
      "language": "",
      "meta_file_val": null,
      "meta_file_attn_mask": ""
    }
  ],
  "test_sentences": "Para hacer que la terminal muestre la sintaxis de Markdown, puedes instalar la herramienta \"mdcat\" utilizando el gestor de paquetes \"brew\" en macOS o \"apt\" en Linux.\n\nEn macOS, puedes ejecutar este comando en la terminal para instalar \"mdcat\":\n\n```\nbrew install mdcat\n```\n\nEn Linux, puedes utilizar el siguiente comando para instalar \"mdcat\":\n\n```\nsudo apt-get install -y mdcat\n```\n\nUna vez que has instalado \"mdcat\", puedes utilizarlo para ver archivos Markdown en la terminal. Por ejemplo, para ver un archivo llamado \"ejemplo.md\", puedes ejecutar el comando:\n\n```\nmdcat ejemplo.md\n```\n\nEste comando mostrar\u00e1 el contenido del archivo \"ejemplo.md\" en la terminal con formato de Markdown.",
  "eval_split_max_size": null,
  "eval_split_size": 0.01,
  "use_speaker_weighted_sampler": false,
  "speaker_weighted_sampler_alpha": 1.0,
  "use_language_weighted_sampler": false,
  "language_weighted_sampler_alpha": 1.0,
  "use_gst": false,
  "gst": {
    "gst_style_input_wav": null,
    "gst_style_input_weights": null,
    "gst_embedding_dim": 512,
    "gst_use_speaker_embedding": false,
    "gst_num_heads": 4,
    "gst_num_style_tokens": 10
  },
  "gst_style_input": null,
  "num_speakers": 1,
  "num_chars": 0,
  "r": 7,
  "gradual_training": [
    [0, 7, 64],
    [1, 5, 64],
    [50000, 3, 32],
    [130000, 2, 32],
    [290000, 1, 32]
  ],
  "memory_size": -1,
  "prenet_type": "original",
  "prenet_dropout": false,
  "prenet_dropout_at_inference": false,
  "stopnet": true,
  "separate_stopnet": true,
  "stopnet_pos_weight": 10.0,
  "max_decoder_steps": 1000,
  "encoder_in_features": 512,
  "decoder_in_features": 512,
  "decoder_output_dim": 80,
  "out_channels": 80,
  "attention_type": "original",
  "attention_heads": 4,
  "attention_norm": "sigmoid",
  "attention_win": false,
  "windowing": false,
  "use_forward_attn": false,
  "forward_attn_mask": false,
  "transition_agent": false,
  "location_attn": true,
  "bidirectional_decoder": false,
  "double_decoder_consistency": true,
  "ddc_r": 7,
  "speakers_file": null,
  "use_speaker_embedding": false,
  "speaker_embedding_dim": 512,
  "use_d_vector_file": false,
  "d_vector_file": false,
  "d_vector_dim": null,
  "seq_len_norm": false,
  "decoder_loss_alpha": 0.5,
  "postnet_loss_alpha": 0.25,
  "postnet_diff_spec_alpha": 0.25,
  "decoder_diff_spec_alpha": 0.25,
  "decoder_ssim_alpha": 0.25,
  "postnet_ssim_alpha": 0.25,
  "ga_alpha": 5.0
}
